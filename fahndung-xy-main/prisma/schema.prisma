// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String   @unique
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

// Neue Fahndungs-Modelle
model Investigation {
  id          String   @id @default(cuid())
  caseNumber  String   @unique
  title       String
  category    InvestigationCategory
  priority    InvestigationPriority
  status      InvestigationStatus @default(DRAFT)
  
  // Schritt 1: Grundinformationen
  shortDescription String
  
  // Schritt 2: Medien
  mainImage   String? // URL zum Hauptbild
  images      InvestigationImage[]
  
  // Schritt 3: Detailinformationen
  description String
  context     String? // Tathergang/Umstände
  features    String? // Besondere Merkmale
  question    String? // "Wer erkennt die Person?"
  
  // Schritt 4: Ort & Kontakt
  location    String
  station     String
  contact     InvestigationContact?
  
  // Schritt 5: Vorschau & Veröffentlichung
  publishedAt DateTime?
  
  // Metadaten
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   String
  updatedBy   String
  
  @@map("investigations")
}

model InvestigationImage {
  id             String   @id @default(cuid())
  investigationId String
  investigation   Investigation @relation(fields: [investigationId], references: [id], onDelete: Cascade)
  url            String
  altText        String?
  caption        String?
  order          Int      @default(0)
  createdAt      DateTime @default(now())
  
  @@map("investigation_images")
}

model InvestigationContact {
  id             String   @id @default(cuid())
  investigationId String   @unique
  investigation   Investigation @relation(fields: [investigationId], references: [id], onDelete: Cascade)
  phone          String?
  email          String?
  fax            String?
  address        String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  
  @@map("investigation_contacts")
}

enum InvestigationCategory {
  WANTED_PERSON    // Straftäter
  MISSING_PERSON   // Vermisste Person
  UNKNOWN_DEAD     // Unbekannte Tote
  STOLEN_GOODS     // Gesuchte Sachen
}

enum InvestigationPriority {
  NORMAL
  URGENT
  NEW
}

enum InvestigationStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}
